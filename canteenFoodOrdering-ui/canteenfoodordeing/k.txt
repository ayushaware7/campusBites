import React, { useState } from 'react';
import Navbar from './Navbar';

const Menu = () => {
  // State for active category and cart items 
  const [activeCategory, setActiveCategory] = useState('All');
  const [cartItems, setCartItems] = useState([]);

  // All food categories
  const categories = [
    'All',
    'Breakfast',
    'Lunch',
    'Dinner',
    'Snacks',
    'Beverages',
    'Desserts'
  ];

  // Menu items data
  const menuItems = [
    // Breakfast items
    { 
      id: 1, 
      name: 'Classic Breakfast Sandwich', 
      price: 4.99, 
      category: 'Breakfast',
      description: 'Eggs, cheese, and your choice of bacon or sausage on a toasted English muffin',
      image: '/api/placeholder/300/200',
      rating: 4.7,
      tags: ['Popular', 'Quick']
    },
    { 
      id: 2, 
      name: 'Pancake Stack', 
      price: 5.99, 
      category: 'Breakfast',
      description: 'Three fluffy pancakes served with maple syrup and butter',
      image: '/api/placeholder/300/200',
      rating: 4.5,
      tags: ['Vegetarian']
    },
    { 
      id: 3, 
      name: 'Veggie Omelette', 
      price: 6.49, 
      category: 'Breakfast',
      description: 'Three-egg omelette with bell peppers, onions, tomatoes, and cheddar cheese',
      image: '/api/placeholder/300/200',
      rating: 4.6,
      tags: ['Vegetarian', 'Healthy']
    },
    { 
      id: 4, 
      name: 'Avocado Toast', 
      price: 5.49, 
      category: 'Breakfast',
      description: 'Freshly smashed avocado on whole grain toast with cherry tomatoes and feta',
      image: '/api/placeholder/300/200',
      rating: 4.8,
      tags: ['Vegetarian', 'Popular', 'Healthy']
    },
    
    // Lunch items
    { 
      id: 5, 
      name: 'Chicken Sandwich', 
      price: 6.99, 
      category: 'Lunch',
      description: 'Grilled chicken breast with lettuce, tomato, and mayo on a brioche bun',
      image: '/api/placeholder/300/200',
      rating: 4.8,
      tags: ['Popular', 'Quick']
    },
    { 
      id: 6, 
      name: 'Caesar Salad', 
      price: 5.99, 
      category: 'Lunch',
      description: 'Crisp romaine lettuce, parmesan cheese, croutons, and Caesar dressing',
      image: '/api/placeholder/300/200',
      rating: 4.4,
      tags: ['Healthy']
    },
    { 
      id: 7, 
      name: 'Veggie Wrap', 
      price: 5.49, 
      category: 'Lunch',
      description: 'Hummus, mixed greens, cucumber, carrots, and bell peppers in a wheat wrap',
      image: '/api/placeholder/300/200',
      rating: 4.5,
      tags: ['Vegetarian', 'Healthy', 'Quick']
    },
    { 
      id: 8, 
      name: 'BBQ Pulled Pork Sandwich', 
      price: 7.49, 
      category: 'Lunch',
      description: 'Slow-cooked pulled pork with BBQ sauce and coleslaw on a brioche bun',
      image: '/api/placeholder/300/200',
      rating: 4.7,
      tags: ['Popular']
    },
    
    // Dinner items
    { 
      id: 9, 
      name: 'Pasta Primavera', 
      price: 8.99, 
      category: 'Dinner',
      description: 'Penne pasta with seasonal vegetables in a light cream sauce',
      image: '/api/placeholder/300/200',
      rating: 4.6,
      tags: ['Vegetarian']
    },
    { 
      id: 10, 
      name: 'Grilled Salmon', 
      price: 10.99, 
      category: 'Dinner',
      description: 'Grilled salmon fillet with lemon herb butter, served with rice and vegetables',
      image: '/api/placeholder/300/200',
      rating: 4.9,
      tags: ['Popular', 'Healthy']
    },
    { 
      id: 11, 
      name: 'Chicken Teriyaki Bowl', 
      price: 8.49, 
      category: 'Dinner',
      description: 'Grilled chicken in teriyaki sauce over steamed rice with vegetables',
      image: '/api/placeholder/300/200',
      rating: 4.7,
      tags: ['Quick']
    },
    { 
      id: 12, 
      name: 'Vegetable Stir Fry', 
      price: 7.99, 
      category: 'Dinner',
      description: 'Mixed vegetables and tofu stir-fried in a savory sauce with rice',
      image: '/api/placeholder/300/200',
      rating: 4.5,
      tags: ['Vegetarian', 'Healthy']
    },
    
    // Snacks
    { 
      id: 13, 
      name: 'Hummus & Pita', 
      price: 3.99, 
      category: 'Snacks',
      description: 'Creamy hummus served with warm pita triangles',
      image: '/api/placeholder/300/200',
      rating: 4.6,
      tags: ['Vegetarian', 'Quick']
    },
    { 
      id: 14, 
      name: 'Mozzarella Sticks', 
      price: 4.49, 
      category: 'Snacks',
      description: 'Crispy breaded mozzarella sticks with marinara sauce',
      image: '/api/placeholder/300/200',
      rating: 4.7,
      tags: ['Popular', 'Vegetarian']
    },
    { 
      id: 15, 
      name: 'Fresh Fruit Cup', 
      price: 3.49, 
      category: 'Snacks',
      description: 'Seasonal fresh fruit mix',
      image: '/api/placeholder/300/200',
      rating: 4.5,
      tags: ['Healthy', 'Vegetarian']
    },
    
    // Beverages
    { 
      id: 16, 
      name: 'Iced Coffee', 
      price: 2.99, 
      category: 'Beverages',
      description: 'Cold brewed coffee served over ice',
      image: '/api/placeholder/300/200',
      rating: 4.8,
      tags: ['Popular', 'Quick']
    },
    { 
      id: 17, 
      name: 'Fruit Smoothie', 
      price: 3.99, 
      category: 'Beverages',
      description: 'Blended strawberries, banana, and yogurt',
      image: '/api/placeholder/300/200',
      rating: 4.6,
      tags: ['Healthy', 'Vegetarian']
    },
    { 
      id: 18, 
      name: 'Green Tea', 
      price: 1.99, 
      category: 'Beverages',
      description: 'Organic green tea, hot or iced',
      image: '/api/placeholder/300/200',
      rating: 4.4,
      tags: ['Healthy', 'Vegetarian']
    },
    
    // Desserts
    { 
      id: 19, 
      name: 'Chocolate Chip Cookie', 
      price: 1.49, 
      category: 'Desserts',
      description: 'Freshly baked chocolate chip cookie',
      image: '/api/placeholder/300/200',
      rating: 4.9,
      tags: ['Popular', 'Vegetarian']
    },
    { 
      id: 20, 
      name: 'New York Cheesecake', 
      price: 3.99, 
      category: 'Desserts',
      description: 'Creamy New York style cheesecake with berry compote',
      image: '/api/placeholder/300/200',
      rating: 4.7,
      tags: ['Vegetarian']
    }
  ];

  // Filter menu items based on active category
  const filteredItems = activeCategory === 'All' 
    ? menuItems 
    : menuItems.filter(item => item.category === activeCategory);

  // Add item to cart
  const addToCart = (item) => {
    // Check if item is already in cart
    const existingItem = cartItems.find(cartItem => cartItem.id === item.id);
    
    if (existingItem) {
      // If item exists, increase quantity
      setCartItems(cartItems.map(cartItem => 
        cartItem.id === item.id 
          ? { ...cartItem, quantity: cartItem.quantity + 1 } 
          : cartItem
      ));
    } else {
      // If item doesn't exist, add it with quantity 1
      setCartItems([...cartItems, { ...item, quantity: 1 }]);
    }
  };

  // Remove item from cart
  const removeFromCart = (itemId) => {
    setCartItems(cartItems.filter(item => item.id !== itemId));
  };

  // Calculate total price
  const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);

  return (
    <div className="min-h-screen bg-gray-50">
      <Navbar />
      
      {/* Menu Header */}
      <div className="bg-orange-500 py-8">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h1 className="text-3xl font-bold text-white text-center">Campus Bites Menu</h1>
          <p className="text-center text-orange-100 mt-2">Order ahead and skip the lines!</p>
        </div>
      </div>
      
      {/* Category Tabs */}
      <div className="bg-white shadow-md sticky top-0 z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex overflow-x-auto py-4 space-x-4 no-scrollbar">
            {categories.map(category => (
              <button
                key={category}
                onClick={() => setActiveCategory(category)}
                className={`px-4 py-2 rounded-full whitespace-nowrap ${
                  activeCategory === category
                    ? 'bg-orange-500 text-white font-medium'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {category}
              </button>
            ))}
          </div>
        </div>
      </div>
      
      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Menu Items */}
          <div className="lg:w-2/3">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">{activeCategory} Items</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {filteredItems.map(item => (
                <div key={item.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
                  <div className="aspect-w-16 aspect-h-9">
                    <img
                      src={item.image}
                      alt={item.name}
                      className="w-full h-48 object-cover"
                    />
                  </div>
                  <div className="p-4">
                    <div className="flex justify-between items-start">
                      <h3 className="text-lg font-medium text-gray-900">{item.name}</h3>
                      <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">â˜… {item.rating}</span>
                    </div>
                    <p className="mt-1 text-sm text-gray-500">{item.description}</p>
                    <div className="mt-2 flex flex-wrap gap-2">
                      {item.tags.map(tag => (
                        <span key={tag} className="text-xs bg-gray-100 text-gray-800 px-2 py-1 rounded-full">
                          {tag}
                        </span>
                      ))}
                    </div>
                    <div className="mt-4 flex justify-between items-center">
                      <p className="text-lg font-bold text-gray-900">${item.price.toFixed(2)}</p>
                      <button 
                        onClick={() => addToCart(item)}
                        className="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition duration-300">
                        Add to Cart
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          {/* Order Summary */}
          <div className="lg:w-1/3">
            <div className="bg-white rounded-lg shadow-md p-6 sticky top-20">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">Your Order</h2>
              
              {cartItems.length === 0 ? (
                <p className="text-gray-500 text-center py-6">Your cart is empty</p>
              ) : (
                <>
                  <div className="space-y-4 mb-6">
                    {cartItems.map(item => (
                      <div key={item.id} className="flex justify-between items-center border-b pb-4">
                        <div>
                          <h3 className="font-medium">{item.name}</h3>
                          <p className="text-sm text-gray-500">
                            ${item.price.toFixed(2)} Ã— {item.quantity}
                          </p>
                        </div>
                        <div className="flex items-center space-x-2">
                          <p className="font-medium">${(item.price * item.quantity).toFixed(2)}</p>
                          <button 
                            onClick={() => removeFromCart(item.id)}
                            className="text-red-500 hover:text-red-700">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                  
                  <div className="border-t pt-4">
                    <div className="flex justify-between items-center text-lg font-bold">
                      <span>Total:</span>
                      <span>${totalPrice.toFixed(2)}</span>
                    </div>
                    <button className="mt-6 w-full bg-orange-500 text-white py-3 rounded-md hover:bg-orange-600 transition duration-300 font-bold">
                      Checkout
                    </button>
                  </div>
                </>
              )}
              
              {/* Estimated Delivery */}
              <div className="mt-6 p-4 bg-gray-50 rounded-lg">
                <h3 className="font-medium text-gray-900 mb-2">Estimated Delivery</h3>
                <p className="text-sm text-gray-500">15-25 minutes</p>
                <p className="text-xs text-gray-500 mt-1">Pickup available at Student Center</p>
              </div>
              
              {/* Promo Code */}
              <div className="mt-6">
                <h3 className="font-medium text-gray-900 mb-2">Promo Code</h3>
                <div className="flex space-x-2">
                  <input
                    type="text"
                    placeholder="Enter code"
                    className="flex-1 border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-orange-500"
                  />
                  <button className="bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300 transition duration-300 text-sm">
                    Apply
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      {/* Footer */}
      <footer className="bg-gray-800 mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-white text-lg font-bold mb-4">Campus Bites</h3>
              <p className="text-gray-300">The best food ordering platform for your campus needs.</p>
            </div>
            <div>
              <h3 className="text-white text-lg font-bold mb-4">Quick Links</h3>
              <ul className="space-y-2">
                <li><a href="/menu" className="text-gray-300 hover:text-orange-300">Menu</a></li>
                <li><a href="/about" className="text-gray-300 hover:text-orange-300">About Us</a></li>
                <li><a href="/contact" className="text-gray-300 hover:text-orange-300">Contact</a></li>
                <li><a href="/faq" className="text-gray-300 hover:text-orange-300">FAQ</a></li>
              </ul>
            </div>
            <div>
              <h3 className="text-white text-lg font-bold mb-4">Contact Us</h3>
              <address className="text-gray-300 not-italic">
                <p>Student Center, Room 101</p>
                <p>University Campus</p>
                <p>Email: support@campusbites.com</p>
                <p>Phone: (123) 456-7890</p>
              </address>
            </div>
          </div>
          <div className="mt-8 pt-8 border-t border-gray-700 text-center">
            <p className="text-gray-300">Â© {new Date().getFullYear()} Campus Bites. All rights reserved.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Menu;